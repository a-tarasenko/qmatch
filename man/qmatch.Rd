% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/qmatch.R
\docType{methods}
\name{qmatch}
\alias{qmatch}
\title{Qmatch algorithm}
\usage{
qmatch(
  x,
  z,
  caliper,
  controls = 1,
  data,
  within,
  method = "nno",
  m.order = "largest",
  compute.weights = TRUE,
  compute.cluster = TRUE,
  compute.discarded = TRUE
)
}
\arguments{
\item{x}{Numeric vector with the scores of treated and control objects,
or formula, or glm.}

\item{z}{If x is a numeric vector, z is a vector with 1 for treated objects}

\item{caliper}{The caliper, i.e., the maximal distance allowed between}

\item{controls}{The maximal number of controls matched to a single treated object}

\item{data}{An optional data frame, list or environment for arguments x,z
and within.}

\item{within}{Vector of factors dividing objects into groups.}

\item{method}{Method for matching: "nno" (default) for nearest neighbor matching
followed by optimal rematching, or "qmatch" for the method producing
maximal number of pairs under the given caliper.}

\item{m.order}{Matching order: "largest" for matching in descending order
starting from largest values of the score,
"smallest" for matching in ascending order starting from
smallest values of the score.}

\item{compute.weights}{Logical value indicating whether to compute weights.}

\item{compute.cluster}{Logical value indicating whether to compute cluster IDs.}

\item{compute.discarded}{Logical value indicating whether to compute
numbers of discarded observations.}
}
\value{
A \code{qmatch} object containing:

\code{match.matrix}:   a \code{(controls+1)} columns matrix, each row containing the numbers
of a matched treated (in col 1) and corresponding
control (in columnss \code{2:(controls+1))} objects. The numbers
of objects are positions in vector x.
If, for a treated object, there are only \code{0<k<controls}
matches, the elements of the row in the
cols (k+2):(controls+1) are filled with integer NAs.

\code{num_pairs}:   vector of length total.matches showing the number of
controls matched to each treated object. \code{num_pairs[j]}
corresponds to the j-th row of match.matrix.

\code{total.matches}:  the number of matched treated objects, which is the
number of rows in match.matrix.

\code{total.pairs}:   the number of matched control objects, which is the
number of non-NA elements in columns \code{2:(controls+1)}
of match.matrix

\code{weights}:   Vector of weights of the observations.
If an observation is not matched, then the corresponding element of
\code{weights} is 0. If a treated observation is matched,
then the corresponding element of \code{weights} is 1.
If a control observation is matched, then the corresponding element of
\code{weights} is 1 over the number of controls matched
to the corresponding treated observation.

\code{cluster}:   Vector of cluster IDs. Each cluster consists of
a treated observation and all the control observations matched to
the treated one.
If an observation is not matched, then the corresponding element of
\code{cluster} is NA.

\code{discarded}:   Vector of the numbers (positions in \code{x})
of observations that are not matched.
}
\description{
Given treatment and control groups, finds a pairing of treatment units
to controls that maximizes number of matched disjoint pairs satisfying a
given caliper.
}
\details{
The input data may be presented as numeric vector \code{x} of scores and
vector \code{z} representing the comparison group.
Observations where \code{z!=0} are assigned
to the treatment group, the other observations being assigned to the control
group. Besides, the \code{x} argument can be specified as a formula
\code{group~score}. Or \code{x} may be a \code{glm} object,
\code{fitted.values} of which are treated as scores and
the dependent variable is treated as group.
}
\examples{
qmatch(c(1,1.1,2.5,1.5,0.2,2,0.5,2),c(0,1,0,1,0,1,0,1),0.5)
}
\references{
P.S. Ruzankin (2020) A fast algorithm for maximal propensity score matching.
\emph{Methodol Comput Appl Probab}. \url{https://doi.org/10.1007/s11009-019-09718-4}
}
\author{
Pavel S. Ruzankin, Marina V. Muravleva
}
